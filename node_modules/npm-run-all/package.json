{
  "_args": [
    [
      {
        "raw": "npm-run-all@1.8.0",
        "scope": null,
        "escapedName": "npm-run-all",
        "name": "npm-run-all",
        "rawSpec": "1.8.0",
        "spec": "1.8.0",
        "type": "version"
      },
      "/Users/omkar/workspace/EducationOne"
    ]
  ],
  "_from": "npm-run-all@1.8.0",
  "_id": "npm-run-all@1.8.0",
  "_inCache": true,
  "_location": "/npm-run-all",
  "_nodeVersion": "4.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/npm-run-all-1.8.0.tgz_1461477279497_0.3767810300923884"
  },
  "_npmUser": {
    "name": "mysticatea",
    "email": "star.ctor@gmail.com"
  },
  "_npmVersion": "3.7.5",
  "_phantomChildren": {
    "ansi-styles": "2.2.1",
    "escape-string-regexp": "1.0.5",
    "has-ansi": "2.0.0",
    "pseudomap": "1.0.2",
    "strip-ansi": "3.0.1",
    "supports-color": "2.0.0",
    "which": "1.2.14",
    "yallist": "2.1.2"
  },
  "_requested": {
    "raw": "npm-run-all@1.8.0",
    "scope": null,
    "escapedName": "npm-run-all",
    "name": "npm-run-all",
    "rawSpec": "1.8.0",
    "spec": "1.8.0",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/npm-run-all/-/npm-run-all-1.8.0.tgz",
  "_shasum": "13c315ab7cbeef24adff15a59222e2e535196d36",
  "_shrinkwrap": null,
  "_spec": "npm-run-all@1.8.0",
  "_where": "/Users/omkar/workspace/EducationOne",
  "author": {
    "name": "Toru Nagashima"
  },
  "bin": {
    "npm-run-all": "bin/npm-run-all.js"
  },
  "bugs": {
    "url": "https://github.com/mysticatea/npm-run-all/issues"
  },
  "dependencies": {
    "babel-runtime": "^6.3.13",
    "chalk": "^1.1.3",
    "cross-spawn-async": "^2.1.9",
    "minimatch": "^3.0.0",
    "ps-tree": "^1.0.1",
    "read-pkg": "^1.1.0",
    "shell-quote": "^1.4.3",
    "string.prototype.padend": "^3.0.0"
  },
  "description": "A CLI tool to run multiple npm-scripts in parallel or sequential / serial.",
  "devDependencies": {
    "babel-cli": "^6.4.0",
    "babel-core": "^6.4.0",
    "babel-plugin-espower": "^2.0.0",
    "babel-plugin-transform-runtime": "^6.4.3",
    "babel-preset-es2015": "^6.3.13",
    "babel-register": "^6.4.3",
    "coveralls": "^2.11.4",
    "esdoc": "^0.4.3",
    "esdoc-importpath-plugin": "^0.0.1",
    "eslint": "^1.10.3",
    "eslint-config-mysticatea": "^1.9.0",
    "eslint-plugin-mysticatea": "^1.0.3",
    "eslint-plugin-node": "^0.6.0",
    "isparta": "^4.0.0",
    "mocha": "^2.3.4",
    "power-assert": "^1.2.0",
    "rimraf": "^2.4.4"
  },
  "directories": {},
  "dist": {
    "shasum": "13c315ab7cbeef24adff15a59222e2e535196d36",
    "tarball": "https://registry.npmjs.org/npm-run-all/-/npm-run-all-1.8.0.tgz"
  },
  "files": [
    "bin",
    "lib",
    "index.js"
  ],
  "gitHead": "d4f68e58c768d8bc58a18632f146ba8c5f4de7a7",
  "homepage": "https://github.com/mysticatea/npm-run-all",
  "keywords": [
    "cli",
    "command",
    "commandline",
    "tool",
    "npm",
    "npm-scripts",
    "run",
    "sequential",
    "serial",
    "parallel",
    "task"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "mysticatea",
      "email": "star.ctor@gmail.com"
    }
  ],
  "name": "npm-run-all",
  "optionalDependencies": {},
  "readme": "# npm-run-all\n\n[![npm version](https://img.shields.io/npm/v/npm-run-all.svg)](https://www.npmjs.com/package/npm-run-all)\n[![Downloads/month](https://img.shields.io/npm/dm/npm-run-all.svg)](https://www.npmjs.com/package/npm-run-all)\n[![Build Status](https://travis-ci.org/mysticatea/npm-run-all.svg?branch=master)](https://travis-ci.org/mysticatea/npm-run-all)\n[![Build status](https://ci.appveyor.com/api/projects/status/v0owd44q1r7hceir/branch/master?svg=true)](https://ci.appveyor.com/project/mysticatea/npm-run-all/branch/master)\n[![Coverage Status](https://coveralls.io/repos/mysticatea/npm-run-all/badge.svg?branch=master&service=github)](https://coveralls.io/github/mysticatea/npm-run-all?branch=master)\n[![Dependency Status](https://david-dm.org/mysticatea/npm-run-all.svg)](https://david-dm.org/mysticatea/npm-run-all)\n\nA CLI tool to run multiple npm-scripts in parallel or sequential / serial.\n\n```\n> npm-run-all clean lint build:*\n```\n\n```\n> npm-run-all clean --parallel \"build:* -- --watch\"\n```\n\n## Installation\n\n```\nnpm install npm-run-all\n```\n\n- This package works in both Windows and UNIX-like environments.\n- This package is tested in the follow node versions.\n  - `0.10` (*requires `npm >= 2.0.0`, so please run `npm install -g npm@latest`*)\n  - `0.12`\n  - `4.x`\n  - `5.x`\n\n## Usage\n\n```\nUsage: npm-run-all [...tasks] [OPTIONS]\n\n  Run specified tasks.\n\n  Options:\n    -h, --help                  Print this text.\n    -v, --version               Print version number.\n\n    -c, --continue-on-error     Set the flag to ignore errors to the current\n                                group of tasks.\n    -l, --print-label           Set the flag to print the task name as a prefix\n                                on each line of output, to the current group of\n                                tasks.\n    -n, --print-name            Set the flag to print the task name before\n                                running each task, to the current group of\n                                tasks.\n    --silent                    Set \"silent\" to the log level of npm.\n\n    -p, --parallel [...tasks]   Run a group of tasks in parallel.\n                                e.g. 'npm-run-all -p foo bar' is similar to\n                                     'npm run foo & npm run bar'.\n    -P [...tasks]               Run a group of tasks in parallel as ignoring\n                                errors. This is shorthand of '-p -c [...tasks]'.\n\n    -s, --sequential [...tasks] Run a group of tasks in sequential.\n        --serial [...tasks]     '--serial' is a synonym of '--sequential'.\n                                e.g. 'npm-run-all -s foo bar' is similar to\n                                     'npm run foo && npm run bar'.\n    -S [...tasks]               Run a group of tasks in sequential as ignoring\n                                errors. This is shorthand of '-s -c [...tasks]'.\n```\n\n### Run tasks sequentially / serially\n\n```\nnpm-run-all build:html build:js\n```\n\nThis is same as `npm run build:html && npm run build:js`.\n\n**Note:** If a task exited with non zero code, the following tasks are not run.\n\n### Run tasks in parallel\n\n```\nnpm-run-all --parallel watch:html watch:js\n```\n\nThis is same as `npm run watch:html & npm run watch:js`.<br>\nOf course, this works on **Windows** as well!\n\n**Note:** If a task exited with non zero code, the other tasks and those descendant processes are killed with `SIGTERM` (On Windows, with `taskkill.exe /F /T`).\n\n### Run a mix of sequential and parallel tasks\n\n```\nnpm-run-all clean lint --parallel watch:html watch:js\n```\n\n1. First, this runs `clean` and `lint` sequentially / serially.\n2. Next, runs `watch:html` and `watch:js` in parallell.\n\n```\nnpm-run-all a b --parallel c d --sequential e f --parallel g h i\n```\nor\n\n```\nnpm-run-all a b --parallel c d --serial e f --parallel g h i\n```\n\n1. First, runs `a` and `b` sequentially / serially.\n2. Second, runs `c` and `d` in parallell.\n3. Third, runs `e` and `f` sequentially / serially.\n4. Lastly, runs `g`, `h`, and `i` in parallell.\n\n### Run with arguments\n\n```\nnpm-run-all \"delay 3000\" --parallel watch:*\nnpm-run-all --parallel \"build:* -- --watch\"\n```\n\nWe can enclose a script name or a pattern in quotes to use arguments.\nWhen you use a pattern, arguments are forwarded to every matched task.\n\nAn example: https://gist.github.com/mysticatea/34949629c9e0a01a9e7d<br>\nSee also: https://docs.npmjs.com/cli/run-script\n\n### Glob-like pattern matching for task names\n\n```\nnpm-run-all --parallel watch:*\n```\n\nIn this case, runs sub tasks of `watch`. e.g. `watch:html`, `watch:js`.\nBut, doesn't run sub-sub tasks. e.g. `watch:js:index`.\n\n`npm-run-all` reads the actual npm-script list from `package.json` in the current directory.\n\n```\nnpm-run-all --parallel watch:**\n```\n\nIf we use a globstar `**`, runs both sub tasks and sub-sub tasks.\n\nThis matching rule is similar to [glob](https://www.npmjs.com/package/glob#glob-primer).\nThe Difference is one -- the separator is `:`, instead of `/`.\n\n### Continue on error\n\nWe can use `--continue-on-error` option to ignore errors.\n\n```\nnpm-run-all --sequential --continue-on-error foo bar\nnpm-run-all --parallel --continue-on-error foo bar\n```\n\n`npm-run-all` stops subsequence when a task exited with non-zero code by default.\nBut when `--continue-on-error` was specified, `npm-run-all` continues subsequence on error.\n\nThere are shorthands.\n\n```\nnpm-run-all -S foo bar\nnpm-run-all -P foo bar\n```\n\n## Node API\n\n```\nvar runAll = require(\"npm-run-all\");\n```\n\n### runAll\n\n```\nvar promise = runAll(patterns, options);\n```\n\nRun npm-scripts.\n\n- **patterns** `string|string[]` -- Glob-like patterns for task names.\n- **options** `object`\n  - **options.parallel** `boolean` --\n    A flag to run tasks in parallel.\n    Default is `false`.\n  - **options.continueOnError** `boolean` --\n    A flag to ignore errors.\n    Default is `false`.\n  - **options.stdin** `stream.Readable|null` --\n    A readable stream to send to the stdin of npm-scripts.\n    Default is nothing.\n    Set `process.stdin` in order to send from stdin.\n  - **options.stdout** `stream.Writable|null` --\n    A writable stream to receive from the stdout of npm-scripts.\n    Default is nothing.\n    Set `process.stdout` in order to print to stdout.\n  - **options.stderr** `stream.Writable|null` --\n    A writable stream to receive from the stderr of npm-scripts\n    Default is nothing.\n    Set `process.stderr` in order to print to stderr.\n  - **options.taskList** `string[]|null` --\n    A string array that is all task names.\n    By default, reads from `package.json` in the current directory.\n  - **options.packageConfig** `object|null` --\n    A map-like object to overwrite package configs.\n    Keys are package names.\n    Every value is a map-like object (Pairs of variable name and value).\n    e.g. `{\"npm-run-all\": {\"test\": 777, \"test2\": 333}}`\n    Default is `null`.\n  - **options.silent** `boolean` --\n    The flag to set `silent` to the log level of npm.\n    Default is `false`.\n\n`runAll` returns a promise that becomes *fulfilled* when all tasks are completed.\nThe promise will become *rejected* when any of the tasks exit with a non-zero code.\n\nSee also: https://doc.esdoc.org/github.com/mysticatea/npm-run-all/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mysticatea/npm-run-all.git"
  },
  "scripts": {
    "build": "babel-node src/bin/npm-run-all.js clean lint build:*",
    "build:babel": "babel src --out-dir .",
    "build:esdoc": "esdoc -c esdoc.json",
    "clean": "rimraf bin coverage docs lib",
    "coveralls": "cat coverage/lcov.info | coveralls",
    "lint": "eslint src test test-workspace",
    "postversion": "git push && git push --tags",
    "preversion": "npm run build",
    "test": "npm run lint && babel-node node_modules/isparta/bin/isparta cover node_modules/mocha/bin/_mocha -- test/*.js --timeout 60000",
    "watch": "mocha test/*.js --require babel-register --timeout 60000 --watch --growl"
  },
  "version": "1.8.0"
}
